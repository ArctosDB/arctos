<!---Autogenerated by /Admin/buildAttributeSearchByNameCode.cfm. Do not manually modify this file.---->
<cfset attrLengthUnits="in,M,METERS,METER,FT,FEET,FOOT,KM,KILOMETER,KILOMETERS,MM,MILLIMETER,MILLIMETERS,CM,CENTIMETER,CENTIMETERS,MI,MILE,MILES,YD,YARD,YARDS,FM,FATHOM,FATHOMS"><cfset attrWeightUnits="G,GRAMS,GRAM,KG,KILOGRAM,KILOGRAMS,LB,POUND,POUNDS,OZ,OUNCE,OUNCES"><cfset attrTimeUnits="D,DAY,DAYS,H,HOUR,HOURS,M,MONTH,MONTHS,WEEK,WEEKS,YR,YEAR,YEARS"><cfset charattrschops="=,!"><cfset numattrschops="=,!,<,>">
<cfif isdefined("abundance") and len(abundance) gt 0>
  <cfset mapurl = "#mapurl#&abundance=#abundance#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_abundance ON (#session.flatTableName#.collection_object_id = tbl_abundance.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_abundance.attribute_type = 'abundance'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_abundance.is_encumbered = 0"></cfif>
  <cfif abundance neq "_">
    <cfset oper=left(abundance,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(abundance,len(abundance)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(abundance)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_abundance.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_abundance.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("age") and len(age) gt 0>
  <cfset mapurl = "#mapurl#&age=#age#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_age ON (#session.flatTableName#.collection_object_id = tbl_age.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_age.attribute_type = 'age'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_age.is_encumbered = 0"></cfif>
  <cfif age neq "_">
    <cfset oper=left(age,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(age,len(age)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(age)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_age.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_age.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("age_class") and len(age_class) gt 0>
  <cfset mapurl = "#mapurl#&age_class=#age_class#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_age_class ON (#session.flatTableName#.collection_object_id = tbl_age_class.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_age_class.attribute_type = 'age class'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_age_class.is_encumbered = 0"></cfif>
  <cfif age_class neq "_">
    <cfset oper=left(age_class,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(age_class,len(age_class)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(age_class)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_age_class.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_age_class.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("appraised_value") and len(appraised_value) gt 0>
  <cfset mapurl = "#mapurl#&appraised_value=#appraised_value#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_appraised_value ON (#session.flatTableName#.collection_object_id = tbl_appraised_value.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_appraised_value.attribute_type = 'appraised value'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_appraised_value.is_encumbered = 0"></cfif>
  <cfif appraised_value neq "_">
    <cfset schunits="">
    <cfset oper=left(appraised_value,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(appraised_value,len(appraised_value)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(appraised_value)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase('XXXX',temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND tbl_appraised_value.attribute_value #oper# #schTerm# and tbl_appraised_value.attribute_units='#schunits#' ">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_appraised_value.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("axillary_girth") and len(axillary_girth) gt 0>
  <cfset mapurl = "#mapurl#&axillary_girth=#axillary_girth#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_axillary_girth ON (#session.flatTableName#.collection_object_id = tbl_axillary_girth.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_axillary_girth.attribute_type = 'axillary girth'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_axillary_girth.is_encumbered = 0"></cfif>
  <cfif axillary_girth neq "_">
    <cfset schunits="">
    <cfset oper=left(axillary_girth,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(axillary_girth,len(axillary_girth)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(axillary_girth)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_axillary_girth.attribute_value,tbl_axillary_girth.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_axillary_girth.attribute_value,tbl_axillary_girth.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_axillary_girth.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("body_condition") and len(body_condition) gt 0>
  <cfset mapurl = "#mapurl#&body_condition=#body_condition#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_body_condition ON (#session.flatTableName#.collection_object_id = tbl_body_condition.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_body_condition.attribute_type = 'body condition'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_body_condition.is_encumbered = 0"></cfif>
  <cfif body_condition neq "_">
    <cfset oper=left(body_condition,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(body_condition,len(body_condition)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(body_condition)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_body_condition.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_body_condition.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("body_width") and len(body_width) gt 0>
  <cfset mapurl = "#mapurl#&body_width=#body_width#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_body_width ON (#session.flatTableName#.collection_object_id = tbl_body_width.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_body_width.attribute_type = 'body width'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_body_width.is_encumbered = 0"></cfif>
  <cfif body_width neq "_">
    <cfset schunits="">
    <cfset oper=left(body_width,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(body_width,len(body_width)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(body_width)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_body_width.attribute_value,tbl_body_width.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_body_width.attribute_value,tbl_body_width.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_body_width.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("breadth") and len(breadth) gt 0>
  <cfset mapurl = "#mapurl#&breadth=#breadth#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_breadth ON (#session.flatTableName#.collection_object_id = tbl_breadth.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_breadth.attribute_type = 'breadth'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_breadth.is_encumbered = 0"></cfif>
  <cfif breadth neq "_">
    <cfset schunits="">
    <cfset oper=left(breadth,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(breadth,len(breadth)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(breadth)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_breadth.attribute_value,tbl_breadth.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_breadth.attribute_value,tbl_breadth.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_breadth.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("brood_parasite_present") and len(brood_parasite_present) gt 0>
  <cfset mapurl = "#mapurl#&brood_parasite_present=#brood_parasite_present#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_brood_parasite_present ON (#session.flatTableName#.collection_object_id = tbl_brood_parasite_present.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_brood_parasite_present.attribute_type = 'brood parasite present'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_brood_parasite_present.is_encumbered = 0"></cfif>
  <cfif brood_parasite_present neq "_">
    <cfset oper=left(brood_parasite_present,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(brood_parasite_present,len(brood_parasite_present)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(brood_parasite_present)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_brood_parasite_present.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_brood_parasite_present.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("brood_patch") and len(brood_patch) gt 0>
  <cfset mapurl = "#mapurl#&brood_patch=#brood_patch#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_brood_patch ON (#session.flatTableName#.collection_object_id = tbl_brood_patch.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_brood_patch.attribute_type = 'brood patch'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_brood_patch.is_encumbered = 0"></cfif>
  <cfif brood_patch neq "_">
    <cfset oper=left(brood_patch,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(brood_patch,len(brood_patch)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(brood_patch)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_brood_patch.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_brood_patch.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("bursa") and len(bursa) gt 0>
  <cfset mapurl = "#mapurl#&bursa=#bursa#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_bursa ON (#session.flatTableName#.collection_object_id = tbl_bursa.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_bursa.attribute_type = 'bursa'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_bursa.is_encumbered = 0"></cfif>
  <cfif bursa neq "_">
    <cfset oper=left(bursa,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(bursa,len(bursa)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(bursa)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_bursa.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_bursa.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("bursa_length") and len(bursa_length) gt 0>
  <cfset mapurl = "#mapurl#&bursa_length=#bursa_length#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_bursa_length ON (#session.flatTableName#.collection_object_id = tbl_bursa_length.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_bursa_length.attribute_type = 'bursa length'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_bursa_length.is_encumbered = 0"></cfif>
  <cfif bursa_length neq "_">
    <cfset schunits="">
    <cfset oper=left(bursa_length,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(bursa_length,len(bursa_length)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(bursa_length)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_bursa_length.attribute_value,tbl_bursa_length.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_bursa_length.attribute_value,tbl_bursa_length.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_bursa_length.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("bursa_width") and len(bursa_width) gt 0>
  <cfset mapurl = "#mapurl#&bursa_width=#bursa_width#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_bursa_width ON (#session.flatTableName#.collection_object_id = tbl_bursa_width.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_bursa_width.attribute_type = 'bursa width'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_bursa_width.is_encumbered = 0"></cfif>
  <cfif bursa_width neq "_">
    <cfset schunits="">
    <cfset oper=left(bursa_width,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(bursa_width,len(bursa_width)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(bursa_width)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_bursa_width.attribute_value,tbl_bursa_width.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_bursa_width.attribute_value,tbl_bursa_width.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_bursa_width.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("carapace_length") and len(carapace_length) gt 0>
  <cfset mapurl = "#mapurl#&carapace_length=#carapace_length#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_carapace_length ON (#session.flatTableName#.collection_object_id = tbl_carapace_length.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_carapace_length.attribute_type = 'carapace length'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_carapace_length.is_encumbered = 0"></cfif>
  <cfif carapace_length neq "_">
    <cfset schunits="">
    <cfset oper=left(carapace_length,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(carapace_length,len(carapace_length)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(carapace_length)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_carapace_length.attribute_value,tbl_carapace_length.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_carapace_length.attribute_value,tbl_carapace_length.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_carapace_length.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("caste") and len(caste) gt 0>
  <cfset mapurl = "#mapurl#&caste=#caste#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_caste ON (#session.flatTableName#.collection_object_id = tbl_caste.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_caste.attribute_type = 'caste'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_caste.is_encumbered = 0"></cfif>
  <cfif caste neq "_">
    <cfset oper=left(caste,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(caste,len(caste)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(caste)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_caste.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_caste.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("clutch_size") and len(clutch_size) gt 0>
  <cfset mapurl = "#mapurl#&clutch_size=#clutch_size#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_clutch_size ON (#session.flatTableName#.collection_object_id = tbl_clutch_size.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_clutch_size.attribute_type = 'clutch size'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_clutch_size.is_encumbered = 0"></cfif>
  <cfif clutch_size neq "_">
    <cfset oper=left(clutch_size,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(clutch_size,len(clutch_size)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(clutch_size)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_clutch_size.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_clutch_size.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("clutch_size_of_nest_parasite") and len(clutch_size_of_nest_parasite) gt 0>
  <cfset mapurl = "#mapurl#&clutch_size_of_nest_parasite=#clutch_size_of_nest_parasite#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_clutch_size_of_nest_parasite ON (#session.flatTableName#.collection_object_id = tbl_clutch_size_of_nest_parasite.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_clutch_size_of_nest_parasite.attribute_type = 'clutch size of nest parasite'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_clutch_size_of_nest_parasite.is_encumbered = 0"></cfif>
  <cfif clutch_size_of_nest_parasite neq "_">
    <cfset oper=left(clutch_size_of_nest_parasite,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(clutch_size_of_nest_parasite,len(clutch_size_of_nest_parasite)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(clutch_size_of_nest_parasite)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_clutch_size_of_nest_parasite.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_clutch_size_of_nest_parasite.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("colors") and len(colors) gt 0>
  <cfset mapurl = "#mapurl#&colors=#colors#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_colors ON (#session.flatTableName#.collection_object_id = tbl_colors.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_colors.attribute_type = 'colors'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_colors.is_encumbered = 0"></cfif>
  <cfif colors neq "_">
    <cfset oper=left(colors,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(colors,len(colors)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(colors)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_colors.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_colors.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("crop_contents") and len(crop_contents) gt 0>
  <cfset mapurl = "#mapurl#&crop_contents=#crop_contents#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_crop_contents ON (#session.flatTableName#.collection_object_id = tbl_crop_contents.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_crop_contents.attribute_type = 'crop contents'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_crop_contents.is_encumbered = 0"></cfif>
  <cfif crop_contents neq "_">
    <cfset oper=left(crop_contents,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(crop_contents,len(crop_contents)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(crop_contents)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_crop_contents.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_crop_contents.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("crown_rump_length") and len(crown_rump_length) gt 0>
  <cfset mapurl = "#mapurl#&crown_rump_length=#crown_rump_length#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_crown_rump_length ON (#session.flatTableName#.collection_object_id = tbl_crown_rump_length.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_crown_rump_length.attribute_type = 'crown-rump length'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_crown_rump_length.is_encumbered = 0"></cfif>
  <cfif crown_rump_length neq "_">
    <cfset schunits="">
    <cfset oper=left(crown_rump_length,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(crown_rump_length,len(crown_rump_length)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(crown_rump_length)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_crown_rump_length.attribute_value,tbl_crown_rump_length.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_crown_rump_length.attribute_value,tbl_crown_rump_length.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_crown_rump_length.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("culmen_length") and len(culmen_length) gt 0>
  <cfset mapurl = "#mapurl#&culmen_length=#culmen_length#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_culmen_length ON (#session.flatTableName#.collection_object_id = tbl_culmen_length.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_culmen_length.attribute_type = 'culmen length'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_culmen_length.is_encumbered = 0"></cfif>
  <cfif culmen_length neq "_">
    <cfset schunits="">
    <cfset oper=left(culmen_length,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(culmen_length,len(culmen_length)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(culmen_length)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_culmen_length.attribute_value,tbl_culmen_length.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_culmen_length.attribute_value,tbl_culmen_length.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_culmen_length.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("culture_of_origin") and len(culture_of_origin) gt 0>
  <cfset mapurl = "#mapurl#&culture_of_origin=#culture_of_origin#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_culture_of_origin ON (#session.flatTableName#.collection_object_id = tbl_culture_of_origin.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_culture_of_origin.attribute_type = 'culture of origin'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_culture_of_origin.is_encumbered = 0"></cfif>
  <cfif culture_of_origin neq "_">
    <cfset oper=left(culture_of_origin,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(culture_of_origin,len(culture_of_origin)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(culture_of_origin)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_culture_of_origin.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_culture_of_origin.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("culture_of_use") and len(culture_of_use) gt 0>
  <cfset mapurl = "#mapurl#&culture_of_use=#culture_of_use#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_culture_of_use ON (#session.flatTableName#.collection_object_id = tbl_culture_of_use.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_culture_of_use.attribute_type = 'culture of use'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_culture_of_use.is_encumbered = 0"></cfif>
  <cfif culture_of_use neq "_">
    <cfset oper=left(culture_of_use,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(culture_of_use,len(culture_of_use)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(culture_of_use)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_culture_of_use.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_culture_of_use.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("curvilinear_length") and len(curvilinear_length) gt 0>
  <cfset mapurl = "#mapurl#&curvilinear_length=#curvilinear_length#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_curvilinear_length ON (#session.flatTableName#.collection_object_id = tbl_curvilinear_length.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_curvilinear_length.attribute_type = 'curvilinear length'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_curvilinear_length.is_encumbered = 0"></cfif>
  <cfif curvilinear_length neq "_">
    <cfset schunits="">
    <cfset oper=left(curvilinear_length,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(curvilinear_length,len(curvilinear_length)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(curvilinear_length)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_curvilinear_length.attribute_value,tbl_curvilinear_length.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_curvilinear_length.attribute_value,tbl_curvilinear_length.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_curvilinear_length.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("depth") and len(depth) gt 0>
  <cfset mapurl = "#mapurl#&depth=#depth#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_depth ON (#session.flatTableName#.collection_object_id = tbl_depth.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_depth.attribute_type = 'depth'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_depth.is_encumbered = 0"></cfif>
  <cfif depth neq "_">
    <cfset schunits="">
    <cfset oper=left(depth,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(depth,len(depth)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(depth)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_depth.attribute_value,tbl_depth.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_depth.attribute_value,tbl_depth.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_depth.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("description") and len(description) gt 0>
  <cfset mapurl = "#mapurl#&description=#description#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_description ON (#session.flatTableName#.collection_object_id = tbl_description.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_description.attribute_type = 'description'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_description.is_encumbered = 0"></cfif>
  <cfif description neq "_">
    <cfset oper=left(description,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(description,len(description)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(description)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_description.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_description.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("diploid_number") and len(diploid_number) gt 0>
  <cfset mapurl = "#mapurl#&diploid_number=#diploid_number#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_diploid_number ON (#session.flatTableName#.collection_object_id = tbl_diploid_number.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_diploid_number.attribute_type = 'diploid number'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_diploid_number.is_encumbered = 0"></cfif>
  <cfif diploid_number neq "_">
    <cfset oper=left(diploid_number,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(diploid_number,len(diploid_number)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(diploid_number)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_diploid_number.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_diploid_number.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("ear_from_crown") and len(ear_from_crown) gt 0>
  <cfset mapurl = "#mapurl#&ear_from_crown=#ear_from_crown#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_ear_from_crown ON (#session.flatTableName#.collection_object_id = tbl_ear_from_crown.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_ear_from_crown.attribute_type = 'ear from crown'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_ear_from_crown.is_encumbered = 0"></cfif>
  <cfif ear_from_crown neq "_">
    <cfset schunits="">
    <cfset oper=left(ear_from_crown,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(ear_from_crown,len(ear_from_crown)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(ear_from_crown)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_ear_from_crown.attribute_value,tbl_ear_from_crown.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_ear_from_crown.attribute_value,tbl_ear_from_crown.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_ear_from_crown.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("ear_from_notch") and len(ear_from_notch) gt 0>
  <cfset mapurl = "#mapurl#&ear_from_notch=#ear_from_notch#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_ear_from_notch ON (#session.flatTableName#.collection_object_id = tbl_ear_from_notch.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_ear_from_notch.attribute_type = 'ear from notch'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_ear_from_notch.is_encumbered = 0"></cfif>
  <cfif ear_from_notch neq "_">
    <cfset schunits="">
    <cfset oper=left(ear_from_notch,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(ear_from_notch,len(ear_from_notch)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(ear_from_notch)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_ear_from_notch.attribute_value,tbl_ear_from_notch.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_ear_from_notch.attribute_value,tbl_ear_from_notch.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_ear_from_notch.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("ectoparasite_examination") and len(ectoparasite_examination) gt 0>
  <cfset mapurl = "#mapurl#&ectoparasite_examination=#ectoparasite_examination#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_ectoparasite_examination ON (#session.flatTableName#.collection_object_id = tbl_ectoparasite_examination.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_ectoparasite_examination.attribute_type = 'ectoparasite examination'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_ectoparasite_examination.is_encumbered = 0"></cfif>
  <cfif ectoparasite_examination neq "_">
    <cfset oper=left(ectoparasite_examination,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(ectoparasite_examination,len(ectoparasite_examination)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(ectoparasite_examination)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_ectoparasite_examination.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_ectoparasite_examination.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("ectoparasites_detected") and len(ectoparasites_detected) gt 0>
  <cfset mapurl = "#mapurl#&ectoparasites_detected=#ectoparasites_detected#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_ectoparasites_detected ON (#session.flatTableName#.collection_object_id = tbl_ectoparasites_detected.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_ectoparasites_detected.attribute_type = 'ectoparasites detected'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_ectoparasites_detected.is_encumbered = 0"></cfif>
  <cfif ectoparasites_detected neq "_">
    <cfset oper=left(ectoparasites_detected,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(ectoparasites_detected,len(ectoparasites_detected)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(ectoparasites_detected)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_ectoparasites_detected.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_ectoparasites_detected.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("egg_content_weight") and len(egg_content_weight) gt 0>
  <cfset mapurl = "#mapurl#&egg_content_weight=#egg_content_weight#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_egg_content_weight ON (#session.flatTableName#.collection_object_id = tbl_egg_content_weight.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_egg_content_weight.attribute_type = 'egg content weight'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_egg_content_weight.is_encumbered = 0"></cfif>
  <cfif egg_content_weight neq "_">
    <cfset schunits="">
    <cfset oper=left(egg_content_weight,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(egg_content_weight,len(egg_content_weight)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(egg_content_weight)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrWeightUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_grams(tbl_egg_content_weight.attribute_value,tbl_egg_content_weight.attribute_units) #oper# to_grams(#low#,'#schunits#') and to_grams(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_grams(tbl_egg_content_weight.attribute_value,tbl_egg_content_weight.attribute_units) #oper# to_grams(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_egg_content_weight.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("eggshell_thickness") and len(eggshell_thickness) gt 0>
  <cfset mapurl = "#mapurl#&eggshell_thickness=#eggshell_thickness#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_eggshell_thickness ON (#session.flatTableName#.collection_object_id = tbl_eggshell_thickness.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_eggshell_thickness.attribute_type = 'eggshell thickness'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_eggshell_thickness.is_encumbered = 0"></cfif>
  <cfif eggshell_thickness neq "_">
    <cfset schunits="">
    <cfset oper=left(eggshell_thickness,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(eggshell_thickness,len(eggshell_thickness)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(eggshell_thickness)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_eggshell_thickness.attribute_value,tbl_eggshell_thickness.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_eggshell_thickness.attribute_value,tbl_eggshell_thickness.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_eggshell_thickness.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("embryo_weight") and len(embryo_weight) gt 0>
  <cfset mapurl = "#mapurl#&embryo_weight=#embryo_weight#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_embryo_weight ON (#session.flatTableName#.collection_object_id = tbl_embryo_weight.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_embryo_weight.attribute_type = 'embryo weight'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_embryo_weight.is_encumbered = 0"></cfif>
  <cfif embryo_weight neq "_">
    <cfset schunits="">
    <cfset oper=left(embryo_weight,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(embryo_weight,len(embryo_weight)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(embryo_weight)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrWeightUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_grams(tbl_embryo_weight.attribute_value,tbl_embryo_weight.attribute_units) #oper# to_grams(#low#,'#schunits#') and to_grams(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_grams(tbl_embryo_weight.attribute_value,tbl_embryo_weight.attribute_units) #oper# to_grams(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_embryo_weight.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("endoparasite_examination") and len(endoparasite_examination) gt 0>
  <cfset mapurl = "#mapurl#&endoparasite_examination=#endoparasite_examination#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_endoparasite_examination ON (#session.flatTableName#.collection_object_id = tbl_endoparasite_examination.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_endoparasite_examination.attribute_type = 'endoparasite examination'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_endoparasite_examination.is_encumbered = 0"></cfif>
  <cfif endoparasite_examination neq "_">
    <cfset oper=left(endoparasite_examination,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(endoparasite_examination,len(endoparasite_examination)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(endoparasite_examination)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_endoparasite_examination.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_endoparasite_examination.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("endoparasites_detected") and len(endoparasites_detected) gt 0>
  <cfset mapurl = "#mapurl#&endoparasites_detected=#endoparasites_detected#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_endoparasites_detected ON (#session.flatTableName#.collection_object_id = tbl_endoparasites_detected.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_endoparasites_detected.attribute_type = 'endoparasites detected'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_endoparasites_detected.is_encumbered = 0"></cfif>
  <cfif endoparasites_detected neq "_">
    <cfset oper=left(endoparasites_detected,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(endoparasites_detected,len(endoparasites_detected)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(endoparasites_detected)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_endoparasites_detected.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_endoparasites_detected.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("examined_for_parasites") and len(examined_for_parasites) gt 0>
  <cfset mapurl = "#mapurl#&examined_for_parasites=#examined_for_parasites#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_examined_for_parasites ON (#session.flatTableName#.collection_object_id = tbl_examined_for_parasites.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_examined_for_parasites.attribute_type = 'examined for parasites'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_examined_for_parasites.is_encumbered = 0"></cfif>
  <cfif examined_for_parasites neq "_">
    <cfset oper=left(examined_for_parasites,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(examined_for_parasites,len(examined_for_parasites)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(examined_for_parasites)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_examined_for_parasites.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_examined_for_parasites.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("experimental") and len(experimental) gt 0>
  <cfset mapurl = "#mapurl#&experimental=#experimental#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_experimental ON (#session.flatTableName#.collection_object_id = tbl_experimental.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_experimental.attribute_type = 'experimental'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_experimental.is_encumbered = 0"></cfif>
  <cfif experimental neq "_">
    <cfset oper=left(experimental,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(experimental,len(experimental)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(experimental)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_experimental.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_experimental.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("extension") and len(extension) gt 0>
  <cfset mapurl = "#mapurl#&extension=#extension#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_extension ON (#session.flatTableName#.collection_object_id = tbl_extension.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_extension.attribute_type = 'extension'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_extension.is_encumbered = 0"></cfif>
  <cfif extension neq "_">
    <cfset schunits="">
    <cfset oper=left(extension,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(extension,len(extension)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(extension)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_extension.attribute_value,tbl_extension.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_extension.attribute_value,tbl_extension.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_extension.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("fat_deposition") and len(fat_deposition) gt 0>
  <cfset mapurl = "#mapurl#&fat_deposition=#fat_deposition#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_fat_deposition ON (#session.flatTableName#.collection_object_id = tbl_fat_deposition.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_fat_deposition.attribute_type = 'fat deposition'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_fat_deposition.is_encumbered = 0"></cfif>
  <cfif fat_deposition neq "_">
    <cfset oper=left(fat_deposition,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(fat_deposition,len(fat_deposition)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(fat_deposition)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_fat_deposition.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_fat_deposition.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("forearm_length") and len(forearm_length) gt 0>
  <cfset mapurl = "#mapurl#&forearm_length=#forearm_length#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_forearm_length ON (#session.flatTableName#.collection_object_id = tbl_forearm_length.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_forearm_length.attribute_type = 'forearm length'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_forearm_length.is_encumbered = 0"></cfif>
  <cfif forearm_length neq "_">
    <cfset schunits="">
    <cfset oper=left(forearm_length,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(forearm_length,len(forearm_length)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(forearm_length)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_forearm_length.attribute_value,tbl_forearm_length.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_forearm_length.attribute_value,tbl_forearm_length.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_forearm_length.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("gonad") and len(gonad) gt 0>
  <cfset mapurl = "#mapurl#&gonad=#gonad#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_gonad ON (#session.flatTableName#.collection_object_id = tbl_gonad.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_gonad.attribute_type = 'gonad'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_gonad.is_encumbered = 0"></cfif>
  <cfif gonad neq "_">
    <cfset schunits="">
    <cfset oper=left(gonad,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(gonad,len(gonad)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(gonad)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_gonad.attribute_value,tbl_gonad.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_gonad.attribute_value,tbl_gonad.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_gonad.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("head_length") and len(head_length) gt 0>
  <cfset mapurl = "#mapurl#&head_length=#head_length#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_head_length ON (#session.flatTableName#.collection_object_id = tbl_head_length.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_head_length.attribute_type = 'head length'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_head_length.is_encumbered = 0"></cfif>
  <cfif head_length neq "_">
    <cfset schunits="">
    <cfset oper=left(head_length,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(head_length,len(head_length)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(head_length)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_head_length.attribute_value,tbl_head_length.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_head_length.attribute_value,tbl_head_length.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_head_length.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("head_width") and len(head_width) gt 0>
  <cfset mapurl = "#mapurl#&head_width=#head_width#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_head_width ON (#session.flatTableName#.collection_object_id = tbl_head_width.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_head_width.attribute_type = 'head width'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_head_width.is_encumbered = 0"></cfif>
  <cfif head_width neq "_">
    <cfset schunits="">
    <cfset oper=left(head_width,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(head_width,len(head_width)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(head_width)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_head_width.attribute_value,tbl_head_width.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_head_width.attribute_value,tbl_head_width.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_head_width.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("height") and len(height) gt 0>
  <cfset mapurl = "#mapurl#&height=#height#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_height ON (#session.flatTableName#.collection_object_id = tbl_height.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_height.attribute_type = 'height'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_height.is_encumbered = 0"></cfif>
  <cfif height neq "_">
    <cfset schunits="">
    <cfset oper=left(height,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(height,len(height)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(height)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_height.attribute_value,tbl_height.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_height.attribute_value,tbl_height.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_height.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("hind_foot_with_claw") and len(hind_foot_with_claw) gt 0>
  <cfset mapurl = "#mapurl#&hind_foot_with_claw=#hind_foot_with_claw#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_hind_foot_with_claw ON (#session.flatTableName#.collection_object_id = tbl_hind_foot_with_claw.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_hind_foot_with_claw.attribute_type = 'hind foot with claw'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_hind_foot_with_claw.is_encumbered = 0"></cfif>
  <cfif hind_foot_with_claw neq "_">
    <cfset schunits="">
    <cfset oper=left(hind_foot_with_claw,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(hind_foot_with_claw,len(hind_foot_with_claw)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(hind_foot_with_claw)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_hind_foot_with_claw.attribute_value,tbl_hind_foot_with_claw.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_hind_foot_with_claw.attribute_value,tbl_hind_foot_with_claw.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_hind_foot_with_claw.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("hind_foot_without_claw") and len(hind_foot_without_claw) gt 0>
  <cfset mapurl = "#mapurl#&hind_foot_without_claw=#hind_foot_without_claw#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_hind_foot_without_claw ON (#session.flatTableName#.collection_object_id = tbl_hind_foot_without_claw.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_hind_foot_without_claw.attribute_type = 'hind foot without claw'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_hind_foot_without_claw.is_encumbered = 0"></cfif>
  <cfif hind_foot_without_claw neq "_">
    <cfset schunits="">
    <cfset oper=left(hind_foot_without_claw,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(hind_foot_without_claw,len(hind_foot_without_claw)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(hind_foot_without_claw)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_hind_foot_without_claw.attribute_value,tbl_hind_foot_without_claw.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_hind_foot_without_claw.attribute_value,tbl_hind_foot_without_claw.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_hind_foot_without_claw.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("hind_limb_length") and len(hind_limb_length) gt 0>
  <cfset mapurl = "#mapurl#&hind_limb_length=#hind_limb_length#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_hind_limb_length ON (#session.flatTableName#.collection_object_id = tbl_hind_limb_length.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_hind_limb_length.attribute_type = 'hind limb length'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_hind_limb_length.is_encumbered = 0"></cfif>
  <cfif hind_limb_length neq "_">
    <cfset schunits="">
    <cfset oper=left(hind_limb_length,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(hind_limb_length,len(hind_limb_length)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(hind_limb_length)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_hind_limb_length.attribute_value,tbl_hind_limb_length.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_hind_limb_length.attribute_value,tbl_hind_limb_length.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_hind_limb_length.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("historical") and len(historical) gt 0>
  <cfset mapurl = "#mapurl#&historical=#historical#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_historical ON (#session.flatTableName#.collection_object_id = tbl_historical.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_historical.attribute_type = 'historical'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_historical.is_encumbered = 0"></cfif>
  <cfif historical neq "_">
    <cfset oper=left(historical,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(historical,len(historical)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(historical)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_historical.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_historical.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("image_confirmed") and len(image_confirmed) gt 0>
  <cfset mapurl = "#mapurl#&image_confirmed=#image_confirmed#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_image_confirmed ON (#session.flatTableName#.collection_object_id = tbl_image_confirmed.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_image_confirmed.attribute_type = 'image confirmed'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_image_confirmed.is_encumbered = 0"></cfif>
  <cfif image_confirmed neq "_">
    <cfset oper=left(image_confirmed,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(image_confirmed,len(image_confirmed)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(image_confirmed)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_image_confirmed.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_image_confirmed.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("incubation_stage") and len(incubation_stage) gt 0>
  <cfset mapurl = "#mapurl#&incubation_stage=#incubation_stage#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_incubation_stage ON (#session.flatTableName#.collection_object_id = tbl_incubation_stage.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_incubation_stage.attribute_type = 'incubation stage'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_incubation_stage.is_encumbered = 0"></cfif>
  <cfif incubation_stage neq "_">
    <cfset oper=left(incubation_stage,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(incubation_stage,len(incubation_stage)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(incubation_stage)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_incubation_stage.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_incubation_stage.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("left_gonad_length") and len(left_gonad_length) gt 0>
  <cfset mapurl = "#mapurl#&left_gonad_length=#left_gonad_length#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_left_gonad_length ON (#session.flatTableName#.collection_object_id = tbl_left_gonad_length.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_left_gonad_length.attribute_type = 'left gonad length'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_left_gonad_length.is_encumbered = 0"></cfif>
  <cfif left_gonad_length neq "_">
    <cfset schunits="">
    <cfset oper=left(left_gonad_length,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(left_gonad_length,len(left_gonad_length)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(left_gonad_length)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_left_gonad_length.attribute_value,tbl_left_gonad_length.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_left_gonad_length.attribute_value,tbl_left_gonad_length.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_left_gonad_length.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("left_gonad_width") and len(left_gonad_width) gt 0>
  <cfset mapurl = "#mapurl#&left_gonad_width=#left_gonad_width#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_left_gonad_width ON (#session.flatTableName#.collection_object_id = tbl_left_gonad_width.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_left_gonad_width.attribute_type = 'left gonad width'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_left_gonad_width.is_encumbered = 0"></cfif>
  <cfif left_gonad_width neq "_">
    <cfset schunits="">
    <cfset oper=left(left_gonad_width,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(left_gonad_width,len(left_gonad_width)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(left_gonad_width)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_left_gonad_width.attribute_value,tbl_left_gonad_width.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_left_gonad_width.attribute_value,tbl_left_gonad_width.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_left_gonad_width.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("location_in_host") and len(location_in_host) gt 0>
  <cfset mapurl = "#mapurl#&location_in_host=#location_in_host#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_location_in_host ON (#session.flatTableName#.collection_object_id = tbl_location_in_host.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_location_in_host.attribute_type = 'location in host'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_location_in_host.is_encumbered = 0"></cfif>
  <cfif location_in_host neq "_">
    <cfset oper=left(location_in_host,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(location_in_host,len(location_in_host)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(location_in_host)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_location_in_host.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_location_in_host.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("materials") and len(materials) gt 0>
  <cfset mapurl = "#mapurl#&materials=#materials#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_materials ON (#session.flatTableName#.collection_object_id = tbl_materials.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_materials.attribute_type = 'materials'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_materials.is_encumbered = 0"></cfif>
  <cfif materials neq "_">
    <cfset oper=left(materials,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(materials,len(materials)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(materials)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_materials.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_materials.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("maximum_standard_length") and len(maximum_standard_length) gt 0>
  <cfset mapurl = "#mapurl#&maximum_standard_length=#maximum_standard_length#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_maximum_standard_length ON (#session.flatTableName#.collection_object_id = tbl_maximum_standard_length.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_maximum_standard_length.attribute_type = 'maximum standard length'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_maximum_standard_length.is_encumbered = 0"></cfif>
  <cfif maximum_standard_length neq "_">
    <cfset schunits="">
    <cfset oper=left(maximum_standard_length,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(maximum_standard_length,len(maximum_standard_length)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(maximum_standard_length)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_maximum_standard_length.attribute_value,tbl_maximum_standard_length.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_maximum_standard_length.attribute_value,tbl_maximum_standard_length.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_maximum_standard_length.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("maximum_total_length") and len(maximum_total_length) gt 0>
  <cfset mapurl = "#mapurl#&maximum_total_length=#maximum_total_length#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_maximum_total_length ON (#session.flatTableName#.collection_object_id = tbl_maximum_total_length.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_maximum_total_length.attribute_type = 'maximum total length'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_maximum_total_length.is_encumbered = 0"></cfif>
  <cfif maximum_total_length neq "_">
    <cfset schunits="">
    <cfset oper=left(maximum_total_length,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(maximum_total_length,len(maximum_total_length)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(maximum_total_length)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_maximum_total_length.attribute_value,tbl_maximum_total_length.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_maximum_total_length.attribute_value,tbl_maximum_total_length.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_maximum_total_length.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("media") and len(media) gt 0>
  <cfset mapurl = "#mapurl#&media=#media#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_media ON (#session.flatTableName#.collection_object_id = tbl_media.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_media.attribute_type = 'media'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_media.is_encumbered = 0"></cfif>
  <cfif media neq "_">
    <cfset oper=left(media,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(media,len(media)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(media)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_media.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_media.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("middle_toe_length") and len(middle_toe_length) gt 0>
  <cfset mapurl = "#mapurl#&middle_toe_length=#middle_toe_length#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_middle_toe_length ON (#session.flatTableName#.collection_object_id = tbl_middle_toe_length.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_middle_toe_length.attribute_type = 'middle toe length'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_middle_toe_length.is_encumbered = 0"></cfif>
  <cfif middle_toe_length neq "_">
    <cfset schunits="">
    <cfset oper=left(middle_toe_length,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(middle_toe_length,len(middle_toe_length)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(middle_toe_length)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_middle_toe_length.attribute_value,tbl_middle_toe_length.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_middle_toe_length.attribute_value,tbl_middle_toe_length.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_middle_toe_length.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("minimum_standard_length") and len(minimum_standard_length) gt 0>
  <cfset mapurl = "#mapurl#&minimum_standard_length=#minimum_standard_length#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_minimum_standard_length ON (#session.flatTableName#.collection_object_id = tbl_minimum_standard_length.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_minimum_standard_length.attribute_type = 'minimum standard length'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_minimum_standard_length.is_encumbered = 0"></cfif>
  <cfif minimum_standard_length neq "_">
    <cfset schunits="">
    <cfset oper=left(minimum_standard_length,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(minimum_standard_length,len(minimum_standard_length)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(minimum_standard_length)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_minimum_standard_length.attribute_value,tbl_minimum_standard_length.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_minimum_standard_length.attribute_value,tbl_minimum_standard_length.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_minimum_standard_length.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("minimum_total_length") and len(minimum_total_length) gt 0>
  <cfset mapurl = "#mapurl#&minimum_total_length=#minimum_total_length#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_minimum_total_length ON (#session.flatTableName#.collection_object_id = tbl_minimum_total_length.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_minimum_total_length.attribute_type = 'minimum total length'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_minimum_total_length.is_encumbered = 0"></cfif>
  <cfif minimum_total_length neq "_">
    <cfset schunits="">
    <cfset oper=left(minimum_total_length,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(minimum_total_length,len(minimum_total_length)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(minimum_total_length)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_minimum_total_length.attribute_value,tbl_minimum_total_length.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_minimum_total_length.attribute_value,tbl_minimum_total_length.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_minimum_total_length.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("molt_condition") and len(molt_condition) gt 0>
  <cfset mapurl = "#mapurl#&molt_condition=#molt_condition#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_molt_condition ON (#session.flatTableName#.collection_object_id = tbl_molt_condition.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_molt_condition.attribute_type = 'molt condition'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_molt_condition.is_encumbered = 0"></cfif>
  <cfif molt_condition neq "_">
    <cfset oper=left(molt_condition,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(molt_condition,len(molt_condition)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(molt_condition)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_molt_condition.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_molt_condition.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("nagpra_category") and len(nagpra_category) gt 0>
  <cfset mapurl = "#mapurl#&nagpra_category=#nagpra_category#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_nagpra_category ON (#session.flatTableName#.collection_object_id = tbl_nagpra_category.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_nagpra_category.attribute_type = 'NAGPRA category'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_nagpra_category.is_encumbered = 0"></cfif>
  <cfif nagpra_category neq "_">
    <cfset oper=left(nagpra_category,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(nagpra_category,len(nagpra_category)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(nagpra_category)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_nagpra_category.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_nagpra_category.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("neck_width") and len(neck_width) gt 0>
  <cfset mapurl = "#mapurl#&neck_width=#neck_width#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_neck_width ON (#session.flatTableName#.collection_object_id = tbl_neck_width.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_neck_width.attribute_type = 'neck width'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_neck_width.is_encumbered = 0"></cfif>
  <cfif neck_width neq "_">
    <cfset schunits="">
    <cfset oper=left(neck_width,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(neck_width,len(neck_width)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(neck_width)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_neck_width.attribute_value,tbl_neck_width.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_neck_width.attribute_value,tbl_neck_width.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_neck_width.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("nest_description") and len(nest_description) gt 0>
  <cfset mapurl = "#mapurl#&nest_description=#nest_description#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_nest_description ON (#session.flatTableName#.collection_object_id = tbl_nest_description.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_nest_description.attribute_type = 'nest description'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_nest_description.is_encumbered = 0"></cfif>
  <cfif nest_description neq "_">
    <cfset oper=left(nest_description,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(nest_description,len(nest_description)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(nest_description)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_nest_description.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_nest_description.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("nest_phenology") and len(nest_phenology) gt 0>
  <cfset mapurl = "#mapurl#&nest_phenology=#nest_phenology#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_nest_phenology ON (#session.flatTableName#.collection_object_id = tbl_nest_phenology.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_nest_phenology.attribute_type = 'nest phenology'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_nest_phenology.is_encumbered = 0"></cfif>
  <cfif nest_phenology neq "_">
    <cfset oper=left(nest_phenology,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(nest_phenology,len(nest_phenology)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(nest_phenology)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_nest_phenology.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_nest_phenology.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("nottitle") and len(nottitle) gt 0>
  <cfset mapurl = "#mapurl#&nottitle=#nottitle#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_nottitle ON (#session.flatTableName#.collection_object_id = tbl_nottitle.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_nottitle.attribute_type = 'nottitle'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_nottitle.is_encumbered = 0"></cfif>
  <cfif nottitle neq "_">
    <cfset oper=left(nottitle,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(nottitle,len(nottitle)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(nottitle)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_nottitle.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_nottitle.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("number_of_labels") and len(number_of_labels) gt 0>
  <cfset mapurl = "#mapurl#&number_of_labels=#number_of_labels#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_number_of_labels ON (#session.flatTableName#.collection_object_id = tbl_number_of_labels.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_number_of_labels.attribute_type = 'number of labels'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_number_of_labels.is_encumbered = 0"></cfif>
  <cfif number_of_labels neq "_">
    <cfset oper=left(number_of_labels,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(number_of_labels,len(number_of_labels)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(number_of_labels)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_number_of_labels.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_number_of_labels.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("numeric_abundance") and len(numeric_abundance) gt 0>
  <cfset mapurl = "#mapurl#&numeric_abundance=#numeric_abundance#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_numeric_abundance ON (#session.flatTableName#.collection_object_id = tbl_numeric_abundance.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_numeric_abundance.attribute_type = 'numeric abundance'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_numeric_abundance.is_encumbered = 0"></cfif>
  <cfif numeric_abundance neq "_">
    <cfset schunits="">
    <cfset oper=left(numeric_abundance,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(numeric_abundance,len(numeric_abundance)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(numeric_abundance)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase('XXXX',temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND tbl_numeric_abundance.attribute_value #oper# #schTerm# and tbl_numeric_abundance.attribute_units='#schunits#' ">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_numeric_abundance.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("numeric_age") and len(numeric_age) gt 0>
  <cfset mapurl = "#mapurl#&numeric_age=#numeric_age#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_numeric_age ON (#session.flatTableName#.collection_object_id = tbl_numeric_age.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_numeric_age.attribute_type = 'numeric age'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_numeric_age.is_encumbered = 0"></cfif>
  <cfif numeric_age neq "_">
    <cfset schunits="">
    <cfset oper=left(numeric_age,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(numeric_age,len(numeric_age)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(numeric_age)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrTimeUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_numeric_age.attribute_value,tbl_numeric_age.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_days(tbl_numeric_age.attribute_value,tbl_numeric_age.attribute_units) #oper# to_days(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_numeric_age.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("ovum") and len(ovum) gt 0>
  <cfset mapurl = "#mapurl#&ovum=#ovum#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_ovum ON (#session.flatTableName#.collection_object_id = tbl_ovum.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_ovum.attribute_type = 'ovum'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_ovum.is_encumbered = 0"></cfif>
  <cfif ovum neq "_">
    <cfset schunits="">
    <cfset oper=left(ovum,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(ovum,len(ovum)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(ovum)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_ovum.attribute_value,tbl_ovum.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_ovum.attribute_value,tbl_ovum.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_ovum.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("parasites_found") and len(parasites_found) gt 0>
  <cfset mapurl = "#mapurl#&parasites_found=#parasites_found#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_parasites_found ON (#session.flatTableName#.collection_object_id = tbl_parasites_found.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_parasites_found.attribute_type = 'parasites found'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_parasites_found.is_encumbered = 0"></cfif>
  <cfif parasites_found neq "_">
    <cfset oper=left(parasites_found,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(parasites_found,len(parasites_found)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(parasites_found)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_parasites_found.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_parasites_found.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("parts_examined") and len(parts_examined) gt 0>
  <cfset mapurl = "#mapurl#&parts_examined=#parts_examined#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_parts_examined ON (#session.flatTableName#.collection_object_id = tbl_parts_examined.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_parts_examined.attribute_type = 'parts examined'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_parts_examined.is_encumbered = 0"></cfif>
  <cfif parts_examined neq "_">
    <cfset oper=left(parts_examined,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(parts_examined,len(parts_examined)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(parts_examined)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_parts_examined.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_parts_examined.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("plastron_length") and len(plastron_length) gt 0>
  <cfset mapurl = "#mapurl#&plastron_length=#plastron_length#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_plastron_length ON (#session.flatTableName#.collection_object_id = tbl_plastron_length.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_plastron_length.attribute_type = 'plastron length'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_plastron_length.is_encumbered = 0"></cfif>
  <cfif plastron_length neq "_">
    <cfset schunits="">
    <cfset oper=left(plastron_length,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(plastron_length,len(plastron_length)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(plastron_length)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_plastron_length.attribute_value,tbl_plastron_length.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_plastron_length.attribute_value,tbl_plastron_length.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_plastron_length.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("purchase_value") and len(purchase_value) gt 0>
  <cfset mapurl = "#mapurl#&purchase_value=#purchase_value#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_purchase_value ON (#session.flatTableName#.collection_object_id = tbl_purchase_value.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_purchase_value.attribute_type = 'purchase value'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_purchase_value.is_encumbered = 0"></cfif>
  <cfif purchase_value neq "_">
    <cfset schunits="">
    <cfset oper=left(purchase_value,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(purchase_value,len(purchase_value)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(purchase_value)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase('XXXX',temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND tbl_purchase_value.attribute_value #oper# #schTerm# and tbl_purchase_value.attribute_units='#schunits#' ">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_purchase_value.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("reproductive_data") and len(reproductive_data) gt 0>
  <cfset mapurl = "#mapurl#&reproductive_data=#reproductive_data#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_reproductive_data ON (#session.flatTableName#.collection_object_id = tbl_reproductive_data.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_reproductive_data.attribute_type = 'reproductive data'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_reproductive_data.is_encumbered = 0"></cfif>
  <cfif reproductive_data neq "_">
    <cfset oper=left(reproductive_data,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(reproductive_data,len(reproductive_data)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(reproductive_data)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_reproductive_data.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_reproductive_data.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("right_gonad_length") and len(right_gonad_length) gt 0>
  <cfset mapurl = "#mapurl#&right_gonad_length=#right_gonad_length#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_right_gonad_length ON (#session.flatTableName#.collection_object_id = tbl_right_gonad_length.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_right_gonad_length.attribute_type = 'right gonad length'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_right_gonad_length.is_encumbered = 0"></cfif>
  <cfif right_gonad_length neq "_">
    <cfset schunits="">
    <cfset oper=left(right_gonad_length,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(right_gonad_length,len(right_gonad_length)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(right_gonad_length)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_right_gonad_length.attribute_value,tbl_right_gonad_length.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_right_gonad_length.attribute_value,tbl_right_gonad_length.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_right_gonad_length.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("right_gonad_width") and len(right_gonad_width) gt 0>
  <cfset mapurl = "#mapurl#&right_gonad_width=#right_gonad_width#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_right_gonad_width ON (#session.flatTableName#.collection_object_id = tbl_right_gonad_width.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_right_gonad_width.attribute_type = 'right gonad width'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_right_gonad_width.is_encumbered = 0"></cfif>
  <cfif right_gonad_width neq "_">
    <cfset schunits="">
    <cfset oper=left(right_gonad_width,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(right_gonad_width,len(right_gonad_width)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(right_gonad_width)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_right_gonad_width.attribute_value,tbl_right_gonad_width.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_right_gonad_width.attribute_value,tbl_right_gonad_width.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_right_gonad_width.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("sex") and len(sex) gt 0>
  <cfset mapurl = "#mapurl#&sex=#sex#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_sex ON (#session.flatTableName#.collection_object_id = tbl_sex.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_sex.attribute_type = 'sex'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_sex.is_encumbered = 0"></cfif>
  <cfif sex neq "_">
    <cfset oper=left(sex,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(sex,len(sex)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(sex)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_sex.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_sex.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("skull_ossification") and len(skull_ossification) gt 0>
  <cfset mapurl = "#mapurl#&skull_ossification=#skull_ossification#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_skull_ossification ON (#session.flatTableName#.collection_object_id = tbl_skull_ossification.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_skull_ossification.attribute_type = 'skull ossification'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_skull_ossification.is_encumbered = 0"></cfif>
  <cfif skull_ossification neq "_">
    <cfset oper=left(skull_ossification,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(skull_ossification,len(skull_ossification)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(skull_ossification)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_skull_ossification.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_skull_ossification.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("snout_vent_length") and len(snout_vent_length) gt 0>
  <cfset mapurl = "#mapurl#&snout_vent_length=#snout_vent_length#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_snout_vent_length ON (#session.flatTableName#.collection_object_id = tbl_snout_vent_length.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_snout_vent_length.attribute_type = 'snout-vent length'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_snout_vent_length.is_encumbered = 0"></cfif>
  <cfif snout_vent_length neq "_">
    <cfset schunits="">
    <cfset oper=left(snout_vent_length,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(snout_vent_length,len(snout_vent_length)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(snout_vent_length)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_snout_vent_length.attribute_value,tbl_snout_vent_length.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_snout_vent_length.attribute_value,tbl_snout_vent_length.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_snout_vent_length.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("snv_results") and len(snv_results) gt 0>
  <cfset mapurl = "#mapurl#&snv_results=#snv_results#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_snv_results ON (#session.flatTableName#.collection_object_id = tbl_snv_results.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_snv_results.attribute_type = 'SNV results'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_snv_results.is_encumbered = 0"></cfif>
  <cfif snv_results neq "_">
    <cfset oper=left(snv_results,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(snv_results,len(snv_results)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(snv_results)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_snv_results.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_snv_results.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("soft_part_color") and len(soft_part_color) gt 0>
  <cfset mapurl = "#mapurl#&soft_part_color=#soft_part_color#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_soft_part_color ON (#session.flatTableName#.collection_object_id = tbl_soft_part_color.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_soft_part_color.attribute_type = 'soft part color'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_soft_part_color.is_encumbered = 0"></cfif>
  <cfif soft_part_color neq "_">
    <cfset oper=left(soft_part_color,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(soft_part_color,len(soft_part_color)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(soft_part_color)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_soft_part_color.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_soft_part_color.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("soft_parts") and len(soft_parts) gt 0>
  <cfset mapurl = "#mapurl#&soft_parts=#soft_parts#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_soft_parts ON (#session.flatTableName#.collection_object_id = tbl_soft_parts.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_soft_parts.attribute_type = 'soft parts'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_soft_parts.is_encumbered = 0"></cfif>
  <cfif soft_parts neq "_">
    <cfset oper=left(soft_parts,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(soft_parts,len(soft_parts)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(soft_parts)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_soft_parts.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_soft_parts.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("standard_length") and len(standard_length) gt 0>
  <cfset mapurl = "#mapurl#&standard_length=#standard_length#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_standard_length ON (#session.flatTableName#.collection_object_id = tbl_standard_length.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_standard_length.attribute_type = 'standard length'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_standard_length.is_encumbered = 0"></cfif>
  <cfif standard_length neq "_">
    <cfset schunits="">
    <cfset oper=left(standard_length,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(standard_length,len(standard_length)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(standard_length)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_standard_length.attribute_value,tbl_standard_length.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_standard_length.attribute_value,tbl_standard_length.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_standard_length.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("stomach_contents") and len(stomach_contents) gt 0>
  <cfset mapurl = "#mapurl#&stomach_contents=#stomach_contents#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_stomach_contents ON (#session.flatTableName#.collection_object_id = tbl_stomach_contents.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_stomach_contents.attribute_type = 'stomach contents'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_stomach_contents.is_encumbered = 0"></cfif>
  <cfif stomach_contents neq "_">
    <cfset oper=left(stomach_contents,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(stomach_contents,len(stomach_contents)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(stomach_contents)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_stomach_contents.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_stomach_contents.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("tail_base_width") and len(tail_base_width) gt 0>
  <cfset mapurl = "#mapurl#&tail_base_width=#tail_base_width#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_tail_base_width ON (#session.flatTableName#.collection_object_id = tbl_tail_base_width.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_tail_base_width.attribute_type = 'tail base width'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_tail_base_width.is_encumbered = 0"></cfif>
  <cfif tail_base_width neq "_">
    <cfset schunits="">
    <cfset oper=left(tail_base_width,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(tail_base_width,len(tail_base_width)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(tail_base_width)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_tail_base_width.attribute_value,tbl_tail_base_width.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_tail_base_width.attribute_value,tbl_tail_base_width.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_tail_base_width.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("tail_condition") and len(tail_condition) gt 0>
  <cfset mapurl = "#mapurl#&tail_condition=#tail_condition#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_tail_condition ON (#session.flatTableName#.collection_object_id = tbl_tail_condition.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_tail_condition.attribute_type = 'tail condition'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_tail_condition.is_encumbered = 0"></cfif>
  <cfif tail_condition neq "_">
    <cfset oper=left(tail_condition,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(tail_condition,len(tail_condition)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(tail_condition)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_tail_condition.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_tail_condition.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("tail_length") and len(tail_length) gt 0>
  <cfset mapurl = "#mapurl#&tail_length=#tail_length#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_tail_length ON (#session.flatTableName#.collection_object_id = tbl_tail_length.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_tail_length.attribute_type = 'tail length'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_tail_length.is_encumbered = 0"></cfif>
  <cfif tail_length neq "_">
    <cfset schunits="">
    <cfset oper=left(tail_length,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(tail_length,len(tail_length)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(tail_length)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_tail_length.attribute_value,tbl_tail_length.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_tail_length.attribute_value,tbl_tail_length.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_tail_length.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("tarsus_length") and len(tarsus_length) gt 0>
  <cfset mapurl = "#mapurl#&tarsus_length=#tarsus_length#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_tarsus_length ON (#session.flatTableName#.collection_object_id = tbl_tarsus_length.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_tarsus_length.attribute_type = 'tarsus length'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_tarsus_length.is_encumbered = 0"></cfif>
  <cfif tarsus_length neq "_">
    <cfset schunits="">
    <cfset oper=left(tarsus_length,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(tarsus_length,len(tarsus_length)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(tarsus_length)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_tarsus_length.attribute_value,tbl_tarsus_length.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_tarsus_length.attribute_value,tbl_tarsus_length.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_tarsus_length.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("total_length") and len(total_length) gt 0>
  <cfset mapurl = "#mapurl#&total_length=#total_length#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_total_length ON (#session.flatTableName#.collection_object_id = tbl_total_length.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_total_length.attribute_type = 'total length'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_total_length.is_encumbered = 0"></cfif>
  <cfif total_length neq "_">
    <cfset schunits="">
    <cfset oper=left(total_length,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(total_length,len(total_length)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(total_length)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_total_length.attribute_value,tbl_total_length.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_total_length.attribute_value,tbl_total_length.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_total_length.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("tragus_length") and len(tragus_length) gt 0>
  <cfset mapurl = "#mapurl#&tragus_length=#tragus_length#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_tragus_length ON (#session.flatTableName#.collection_object_id = tbl_tragus_length.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_tragus_length.attribute_type = 'tragus length'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_tragus_length.is_encumbered = 0"></cfif>
  <cfif tragus_length neq "_">
    <cfset schunits="">
    <cfset oper=left(tragus_length,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(tragus_length,len(tragus_length)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(tragus_length)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_tragus_length.attribute_value,tbl_tragus_length.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_tragus_length.attribute_value,tbl_tragus_length.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_tragus_length.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("trap_identifier") and len(trap_identifier) gt 0>
  <cfset mapurl = "#mapurl#&trap_identifier=#trap_identifier#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_trap_identifier ON (#session.flatTableName#.collection_object_id = tbl_trap_identifier.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_trap_identifier.attribute_type = 'trap identifier'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_trap_identifier.is_encumbered = 0"></cfif>
  <cfif trap_identifier neq "_">
    <cfset oper=left(trap_identifier,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(trap_identifier,len(trap_identifier)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(trap_identifier)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_trap_identifier.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_trap_identifier.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("trap_type") and len(trap_type) gt 0>
  <cfset mapurl = "#mapurl#&trap_type=#trap_type#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_trap_type ON (#session.flatTableName#.collection_object_id = tbl_trap_type.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_trap_type.attribute_type = 'trap type'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_trap_type.is_encumbered = 0"></cfif>
  <cfif trap_type neq "_">
    <cfset oper=left(trap_type,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(trap_type,len(trap_type)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(trap_type)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_trap_type.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_trap_type.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("unformatted_measurements") and len(unformatted_measurements) gt 0>
  <cfset mapurl = "#mapurl#&unformatted_measurements=#unformatted_measurements#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_unformatted_measurements ON (#session.flatTableName#.collection_object_id = tbl_unformatted_measurements.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_unformatted_measurements.attribute_type = 'unformatted measurements'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_unformatted_measurements.is_encumbered = 0"></cfif>
  <cfif unformatted_measurements neq "_">
    <cfset oper=left(unformatted_measurements,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(unformatted_measurements,len(unformatted_measurements)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(unformatted_measurements)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_unformatted_measurements.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_unformatted_measurements.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("value") and len(value) gt 0>
  <cfset mapurl = "#mapurl#&value=#value#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_value ON (#session.flatTableName#.collection_object_id = tbl_value.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_value.attribute_type = 'value'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_value.is_encumbered = 0"></cfif>
  <cfif value neq "_">
    <cfset schunits="">
    <cfset oper=left(value,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(value,len(value)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(value)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase('XXXX',temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND tbl_value.attribute_value #oper# #schTerm# and tbl_value.attribute_units='#schunits#' ">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_value.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("verbatim_collector") and len(verbatim_collector) gt 0>
  <cfset mapurl = "#mapurl#&verbatim_collector=#verbatim_collector#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_verbatim_collector ON (#session.flatTableName#.collection_object_id = tbl_verbatim_collector.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_verbatim_collector.attribute_type = 'verbatim collector'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_verbatim_collector.is_encumbered = 0"></cfif>
  <cfif verbatim_collector neq "_">
    <cfset oper=left(verbatim_collector,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(verbatim_collector,len(verbatim_collector)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(verbatim_collector)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_verbatim_collector.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_verbatim_collector.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("verbatim_host_age") and len(verbatim_host_age) gt 0>
  <cfset mapurl = "#mapurl#&verbatim_host_age=#verbatim_host_age#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_verbatim_host_age ON (#session.flatTableName#.collection_object_id = tbl_verbatim_host_age.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_verbatim_host_age.attribute_type = 'verbatim host age'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_verbatim_host_age.is_encumbered = 0"></cfif>
  <cfif verbatim_host_age neq "_">
    <cfset oper=left(verbatim_host_age,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(verbatim_host_age,len(verbatim_host_age)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(verbatim_host_age)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_verbatim_host_age.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_verbatim_host_age.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("verbatim_host_id") and len(verbatim_host_id) gt 0>
  <cfset mapurl = "#mapurl#&verbatim_host_id=#verbatim_host_id#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_verbatim_host_id ON (#session.flatTableName#.collection_object_id = tbl_verbatim_host_id.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_verbatim_host_id.attribute_type = 'verbatim host ID'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_verbatim_host_id.is_encumbered = 0"></cfif>
  <cfif verbatim_host_id neq "_">
    <cfset oper=left(verbatim_host_id,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(verbatim_host_id,len(verbatim_host_id)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(verbatim_host_id)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_verbatim_host_id.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_verbatim_host_id.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("verbatim_host_sex") and len(verbatim_host_sex) gt 0>
  <cfset mapurl = "#mapurl#&verbatim_host_sex=#verbatim_host_sex#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_verbatim_host_sex ON (#session.flatTableName#.collection_object_id = tbl_verbatim_host_sex.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_verbatim_host_sex.attribute_type = 'verbatim host sex'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_verbatim_host_sex.is_encumbered = 0"></cfif>
  <cfif verbatim_host_sex neq "_">
    <cfset oper=left(verbatim_host_sex,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(verbatim_host_sex,len(verbatim_host_sex)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(verbatim_host_sex)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_verbatim_host_sex.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_verbatim_host_sex.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("verbatim_preservation_date") and len(verbatim_preservation_date) gt 0>
  <cfset mapurl = "#mapurl#&verbatim_preservation_date=#verbatim_preservation_date#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_verbatim_preservation_date ON (#session.flatTableName#.collection_object_id = tbl_verbatim_preservation_date.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_verbatim_preservation_date.attribute_type = 'verbatim preservation date'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_verbatim_preservation_date.is_encumbered = 0"></cfif>
  <cfif verbatim_preservation_date neq "_">
    <cfset oper=left(verbatim_preservation_date,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(verbatim_preservation_date,len(verbatim_preservation_date)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(verbatim_preservation_date)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_verbatim_preservation_date.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_verbatim_preservation_date.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>

<cfif isdefined("weight") and len(weight) gt 0>
  <cfset mapurl = "#mapurl#&weight=#weight#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_weight ON (#session.flatTableName#.collection_object_id = tbl_weight.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_weight.attribute_type = 'weight'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_weight.is_encumbered = 0"></cfif>
  <cfif weight neq "_">
    <cfset schunits="">
    <cfset oper=left(weight,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(weight,len(weight)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(weight)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrWeightUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_grams(tbl_weight.attribute_value,tbl_weight.attribute_units) #oper# to_grams(#low#,'#schunits#') and to_grams(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_grams(tbl_weight.attribute_value,tbl_weight.attribute_units) #oper# to_grams(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_weight.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("width") and len(width) gt 0>
  <cfset mapurl = "#mapurl#&width=#width#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_width ON (#session.flatTableName#.collection_object_id = tbl_width.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_width.attribute_type = 'width'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_width.is_encumbered = 0"></cfif>
  <cfif width neq "_">
    <cfset schunits="">
    <cfset oper=left(width,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(width,len(width)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(width)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_width.attribute_value,tbl_width.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_width.attribute_value,tbl_width.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_width.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("wing_chord") and len(wing_chord) gt 0>
  <cfset mapurl = "#mapurl#&wing_chord=#wing_chord#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_wing_chord ON (#session.flatTableName#.collection_object_id = tbl_wing_chord.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_wing_chord.attribute_type = 'wing chord'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_wing_chord.is_encumbered = 0"></cfif>
  <cfif wing_chord neq "_">
    <cfset schunits="">
    <cfset oper=left(wing_chord,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(wing_chord,len(wing_chord)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(wing_chord)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_wing_chord.attribute_value,tbl_wing_chord.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_wing_chord.attribute_value,tbl_wing_chord.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_wing_chord.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("wing_span") and len(wing_span) gt 0>
  <cfset mapurl = "#mapurl#&wing_span=#wing_span#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_wing_span ON (#session.flatTableName#.collection_object_id = tbl_wing_span.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_wing_span.attribute_type = 'wing span'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_wing_span.is_encumbered = 0"></cfif>
  <cfif wing_span neq "_">
    <cfset schunits="">
    <cfset oper=left(wing_span,1)>
    <cfif listfind(numattrschops,oper)>
      <cfset schTerm=ucase(right(wing_span,len(wing_span)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(wing_span)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfset temp=trim(rereplace(schTerm,"[0-9]","","all"))>
    <cfif len(temp) gt 0 and listfindnocase(attrLengthUnits,temp) and isnumeric(replace(schTerm,temp,""))>
      <cfset schTerm=replace(schTerm,temp,"")><cfset schunits=temp>
    <cfelseif left(temp,1) eq "-" and listfindnocase(attrTimeUnits,trim(replace(temp,"-","")))>
      <cfset schunits=trim(replace(temp,"-",""))>
      <cfset low=trim(listgetat(numeric_age,1,"-"))>
      <cfset high=trim(replacenocase(replace(replace(numeric_age,low,"","first"),"-",""),schunits,""))>
      <cfset schTerm=trim(replace(replace(replace(numeric_age,schunits,""),low,""),high,""))>
      <cfif len(low) gt 0 and len(high) gt 0 and len(schunits) gt 0><cfset oper="between"></cfif>
    </cfif>
    <cfif oper is "between">
      <cfset basQual = " #basQual# AND to_days(tbl_wing_span.attribute_value,tbl_wing_span.attribute_units) #oper# to_days(#low#,'#schunits#') and to_days(#high#,'#schunits#')">
    <cfelseif len(schunits) gt 0>
      <cfset basQual = " #basQual# AND to_meters(tbl_wing_span.attribute_value,tbl_wing_span.attribute_units) #oper# to_meters(#schTerm#,'#schunits#')">
    <cfelse>
      <cfset basQual = " #basQual# AND tbl_wing_span.attribute_value #oper# '#schTerm#'">
    </cfif>
  </cfif>
</cfif>

<cfif isdefined("year_class") and len(year_class) gt 0>
  <cfset mapurl = "#mapurl#&year_class=#year_class#">
  <cfset basJoin = " #basJoin# INNER JOIN v_attributes tbl_year_class ON (#session.flatTableName#.collection_object_id = tbl_year_class.collection_object_id)">
  <cfset basQual = " #basQual# AND tbl_year_class.attribute_type = 'year class'">
  <cfif session.flatTableName is not "flat"><cfset basQual = " #basQual# AND tbl_year_class.is_encumbered = 0"></cfif>
  <cfif year_class neq "_">
    <cfset oper=left(year_class,1)>
    <cfif listfind(charattrschops,oper)>
      <cfset schTerm=ucase(right(year_class,len(year_class)-1))>
    <cfelse>
      <cfset oper="like"><cfset schTerm=ucase(year_class)>
    </cfif>
    <cfif oper is "!"><cfset oper="!="></cfif>
    <cfif oper is "like">
      <cfset basQual = " #basQual# AND upper(tbl_year_class.attribute_value) #oper# '%#ucase(escapeQuotes(schTerm))#%'">
	<cfelse>
      <cfset basQual = " #basQual# AND upper(tbl_year_class.attribute_value) #oper# '#ucase(escapeQuotes(schTerm))#'">
	</cfif>
  </cfif>
</cfif>